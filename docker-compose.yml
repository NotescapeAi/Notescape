version: "3.9"

services:
  db:
    image: pgvector/pgvector:pg16
    container_name: notescape-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-notescape}
      POSTGRES_USER: ${POSTGRES_USER:-notescape}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-notescape_pass}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        EMBED_MODEL: ${EMBED_MODEL:-sentence-transformers/all-MiniLM-L6-v2}
    container_name: notescape-api
    depends_on:
      - db
    env_file:
      - ./.env
    environment:
      # Point backend to the db service and container port 5432
      DATABASE_URL: ${DATABASE_URL:-postgresql://notescape:notescape_pass@db:5432/notescape}
      FASTAPI_RELOAD: ${FASTAPI_RELOAD:-false}
      FASTAPI_WORKERS: ${FASTAPI_WORKERS:-2}
      UPLOAD_ROOT: /data/uploads
    volumes:
      - ./uploads:/data/uploads
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/health || exit 1"]
      interval: 30s
      timeout: 5s
      start_period: 15s
      retries: 5

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: notescape-web
    depends_on:
      - api
    environment:
      # Frontend will talk to api through nginx proxy at /api; no .env needed at build time
      - NODE_ENV=production
    ports:
      - "5173:80"   # open http://localhost:5173
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/ || exit 1"]
      interval: 30s
      timeout: 5s
      start_period: 10s
      retries: 5

volumes:
  pgdata: